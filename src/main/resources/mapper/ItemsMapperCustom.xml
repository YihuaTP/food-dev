<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coke.summer.mapper.ItemsMapperCustom">

<!--    <select id="queryItemComments" parameterType="Map" resultType="com.coke.summer.dto.ItemCommentDTO">-->
<!--        SELECT-->
<!--        ic.comment_level as commentLevel,-->
<!--        ic.content as content,-->
<!--        ic.sepc_name as specName,-->
<!--        ic.created_time as createdTime,-->
<!--        u.face as userFace,-->
<!--        u.nickname as nickname-->
<!--        FROM-->
<!--        items_comments ic-->
<!--        LEFT JOIN-->
<!--        users u-->
<!--        ON-->
<!--        ic.user_id = u.id-->
<!--        WHERE-->
<!--        ic.item_id = #{paramsMap.itemId}-->
<!--        <if test=" paramsMap.level != null and paramsMap.level != '' ">-->
<!--            AND ic.comment_level = #{paramsMap.level}-->
<!--        </if>-->
<!--    </select>-->

<!--    <select id="searchItems" parameterType="Map" resultType="com.coke.summer.dto.SearchItemsDTO">-->
<!--        SELECT-->
<!--        i.id as itemId,-->
<!--        i.item_name as itemName,-->
<!--        i.sell_counts as sellCounts,-->
<!--        ii.url as imgUrl,-->
<!--        tempSpec.price_discount as price-->
<!--        FROM items i-->
<!--        LEFT JOIN items_img ii on i.id = ii.item_id-->
<!--        LEFT JOIN-->
<!--        (SELECT item_id,MIN(price_discount) as price_discount from items_spec GROUP BY item_id) tempSpec-->
<!--        on i.id = tempSpec.item_id-->
<!--        WHERE-->
<!--        ii.is_main = 1-->
<!--        <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">-->
<!--            AND i.item_name like '%${paramsMap.keywords}%'-->
<!--        </if>-->
<!--        order by-->
<!--        <choose>-->
<!--            <when test=" paramsMap.sort == &quot;c&quot; ">-->
<!--                i.sell_counts desc-->
<!--            </when>-->
<!--            <when test=" paramsMap.sort == &quot;p&quot; ">-->
<!--                tempSpec.price_discount asc-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                i.item_name asc-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </select>-->
<!--    &lt;!&ndash; k: 默认，代表默认排序，根据name&ndash;&gt;-->
<!--    &lt;!&ndash; c: 根据销量排序&ndash;&gt;-->
<!--    &lt;!&ndash; p: 根据价格排序&ndash;&gt;-->

<!--    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.coke.summer.dto.SearchItemsDTO">-->
<!--        SELECT-->
<!--            i.id as itemId,-->
<!--            i.item_name as itemName,-->
<!--            i.sell_counts as sellCounts,-->
<!--            ii.url as imgUrl,-->
<!--            tempSpec.price_discount as price-->
<!--        FROM-->
<!--            items i-->
<!--        LEFT JOIN-->
<!--            items_img ii-->
<!--        on-->
<!--            i.id = ii.item_id-->
<!--        LEFT JOIN-->
<!--            (SELECT item_id,MIN(price_discount) as price_discount from items_spec GROUP BY item_id) tempSpec-->
<!--        on-->
<!--            i.id = tempSpec.item_id-->
<!--        WHERE-->
<!--            ii.is_main = 1-->
<!--        and-->
<!--            i.cat_id = #{paramsMap.catId}-->
<!--        order by-->
<!--            <choose>-->
<!--                <when test=" paramsMap.sort == &quot;c&quot; ">-->
<!--                    i.sell_counts desc-->
<!--                </when>-->
<!--                <when test=" paramsMap.sort == &quot;p&quot; ">-->
<!--                    tempSpec.price_discount asc-->
<!--                </when>-->
<!--                <otherwise>-->
<!--                    i.item_name asc-->
<!--                </otherwise>-->
<!--            </choose>-->
<!--    </select>-->

<!--    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.coke.summer.dto.ShopcartDTO">-->
<!--        SELECT-->
<!--            t_items.id as itemId,-->
<!--            t_items.item_name as itemName,-->
<!--            t_items_img.url as itemImgUrl,-->
<!--            t_items_spec.id as specId,-->
<!--            t_items_spec.`name` as specName,-->
<!--            t_items_spec.price_discount as priceDiscount,-->
<!--            t_items_spec.price_normal as priceNormal-->
<!--        FROM-->
<!--            items_spec t_items_spec-->
<!--        LEFT JOIN-->
<!--            items t_items-->
<!--        ON-->
<!--            t_items.id = t_items_spec.item_id-->
<!--        LEFT JOIN-->
<!--            items_img t_items_img-->
<!--        on-->
<!--            t_items_img.item_id = t_items.id-->
<!--        WHERE-->
<!--            t_items_img.is_main = 1-->
<!--        AND-->
<!--            t_items_spec.id IN-->
<!--            <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">-->
<!--                #{specId}-->
<!--            </foreach>-->
<!--    </select>-->


<!--    &lt;!&ndash; 乐观锁：使用SQl语句来控制锁-->

<!--        MySQL的默认存储引擎是InnoDB,默认行锁。所以在update的时候会在对同一条记录加锁。-->
<!--        虽然存在两个线程的update的事务未提交，但是innodb的update操作是采用当前读的方式。-->
<!--        假设线程A开启事务A并执行update操作后，但未提交事务；此时线程B也开启事务B并update操作。-->
<!--        此时线程B的update是基于当前读的方式获取到线程A更改后的结果。-->
<!--        如果事务A在此时想提交事务，这是不允许的。-->
<!--        根据两阶段锁协议，事务B没提交，因为此时在这条记录上的写锁还没有释放。-->
<!--        所以必须等待事务B提交后释放锁。-->

<!--    &ndash;&gt;-->
<!--    <update id="decreaseItemSpecStock">-->

<!--        update-->
<!--            items_spec-->
<!--        set-->
<!--            stock = stock - #{pendingCounts}-->
<!--        where-->
<!--            id = #{specId}-->
<!--        and-->
<!--            stock >= #{pendingCounts}-->

<!--    </update>-->

</mapper>